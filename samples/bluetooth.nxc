/*	Bluetooth communication sample code.
 *	To use this you need two bricks.  One the master,
 *	the other the slave.  You need to pair them
 * 	together with bluetooth before you try to run this.
 *	Use the bluetooth menu on the NXT brick to pair both
 *	bricks together.  The master is the brick that
 *	initiated the pairing.  Put the slave pairing into
 * 	slot 1 on the Master.
 *
 * 	Once they are paired, connect a touch sensor to
 *	port 2 on the Master and motors to ports B and C
 *	on the slave.  Download and run this program on the
 * 	master.  The slave needs no special program.
 */

#define BT_CONN 1
#define MOTOR(p,s) RemoteSetOutputState(BT_CONN, p, s, \
  OUT_MODE_MOTORON+OUT_MODE_BRAKE+OUT_MODE_REGULATED, \
  OUT_REGMODE_SPEED, 0, OUT_RUNSTATE_RUNNING, 0)

sub BTCheck(int conn){
   if (!BluetoothStatus(conn)==NO_ERR){
      TextOut(5,LCD_LINE2,"Error");
      Wait(1000);
      Stop(true);
   }
}

task main(){
   // Set sensor 2 as a touch sensor on the Master.
   SetSensor(IN_2, SENSOR_TOUCH);

   // Initialize the BT connection
   BTCheck(BT_CONN);

   // Play a little music on the slave
   RemotePlayTone(BT_CONN, 4000, 100);
   until(BluetoothStatus(BT_CONN)==NO_ERR);
   Wait(110);
   until(BluetoothStatus(BT_CONN)==NO_ERR);

   // Reset/initialize the motors on the slave.
   RemoteResetMotorPosition(BT_CONN,OUT_B,true);
   RemoteResetMotorPosition(BT_CONN,OUT_C,true);
   until(BluetoothStatus(BT_CONN)==NO_ERR);

   while(true)
   {
      // Set the slave to got forward at power 100.
      // (Motors B and C both running.)
      MOTOR(OUT_B,100);
      until(BluetoothStatus(BT_CONN)==NO_ERR);
      MOTOR(OUT_C,100);
      until(BluetoothStatus(BT_CONN)==NO_ERR);

      // Wait until the sensor on the Master is pressed.
      until (SENSOR_2 == 1);

      // Stop the motors on the slave
      MOTOR(OUT_B,0);
      until(BluetoothStatus(BT_CONN)==NO_ERR);
      MOTOR(OUT_C,0);
      until(BluetoothStatus(BT_CONN)==NO_ERR);

      // Wait until the sensor on the Master is released.
      until (SENSOR_2 == 0);
   }
}
